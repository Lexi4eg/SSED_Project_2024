@page "/questions"
@inject HttpClient Http
@inject IJSRuntime JSRuntime

<h3>Questions</h3>

@if (questions == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @foreach (var question in questions)
    {
        int selectedAnswerIndex = -1;
        <div style="padding: 20px; margin: 10px" class="card @(question.IsAnswered ? (question.IsCorrect ? "bg-success" : "bg-red") : "")">
            <div class="card-body">
                <h5 class="card-title">@question.question</h5>
                @for (int i = 0; i < question.answers.Length; i++)
                {
                    var answer = question.answers[i];
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="@question.Id" value="@i" @onchange="() => selectedAnswerIndex = i" disabled="@question.IsAnswered">
                        <label class="form-check-label">
                            @answer.answer
                        </label>
                    </div>
                }
                <button class="btn btn-primary" @onclick="() => checkAnswer(question, selectedAnswerIndex)" disabled="@question.IsAnswered">Submit</button>
                @if (question.IsAnswered)
                {
                    <span class="badge badge-@(question.IsCorrect ? "success" : "danger")">@question.IsCorrect</span>
                }
                <div>@selectedAnswerIndex</div>
            </div>
        </div>
    }
}

@code {
    private Question[] questions;

    protected override async Task OnInitializedAsync()
    {
        questions = await Http.GetFromJsonAsync<Question[]>("http://localhost:8080/api/v1/questions");
    }

    public async void checkAnswer(Question question, int selectedAnswerIndex)
    {
        await JSRuntime.InvokeVoidAsync("console.log", selectedAnswerIndex);
        
        question.IsAnswered = true;
        question.IsCorrect = selectedAnswerIndex != -1 && question.answers[selectedAnswerIndex].correct;
    }

    public class Question
    {
        public long Id { get; set; }
        public string question { get; set; }
        public Answer[] answers { get; set; }
        public bool IsAnswered { get; set; }
        public bool IsCorrect { get; set; }
    }

    public class Answer
    {
        public long aId { get; set; }
        public string answer { get; set; }
        public bool correct { get; set; }
    }
}